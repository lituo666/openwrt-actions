# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: N1-openwrt-ci

on:
  workflow_dispatch:
#  push:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  DEVICE: N1
  CONFIG_FILE: N1.config.buildinfo
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest  # 运行所需要的虚拟机环境

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main     # 仓库分支名字

      - name: 检查必要文件
        run: |
          [ -e $DEVICE/$CONFIG_FILE ]
          [ -e $DEVICE/$DIY_P1_SH ]
          [ -e $DEVICE/$DIY_P2_SH ]
          [ -e $DEVICE/boot-5.15.67-flippy-76+o.tar.gz ]
          [ -e $DEVICE/dtb-amlogic-5.15.67-flippy-76+o.tar.gz ]
          [ -e $DEVICE/header-5.15.67-flippy-76+o.tar.gz ]
          [ -e $DEVICE/modules-5.15.67-flippy-76+o.tar.gz ]

      - name: 删除ubuntu没有软件
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "$TZ"

          df -h
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Clone lede 源码
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          cp $DEVICE/$CONFIG_FILE $GITHUB_WORKSPACE/openwrt/.config
          ls -al
          chmod +x $DEVICE/$DIY_P2_SH
          cd openwrt
          bash $GITHUB_WORKSPACE/$DEVICE/$DIY_P2_SH
          ls -al package
          make defconfig

      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./openwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./openwrt/artifact/package/

      - name: Deliver rootfs
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_rootfs
          path: ./openwrt/bin/targets/

      - name: 打包
        run: |
          sudo mkdir -p /opt/kernel
          sudo cp $GITHUB_WORKSPACE/$DEVICE/*.tar.gz /opt/kernel
          cd /opt
          sudo git clone https://github.com/unifreq/openwrt_packit
          sudo cp $GITHUB_WORKSPACE/openwrt/artifact/firmware/*rootfs.tar.gz openwrt_packit
          cd openwrt_packit
          sudo bash ./mk_s905d_n1.sh
          cd output
          sudo gzip *.img
          sudo cp -rf *.gz ./artifact/firmware/
      
      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./openwrt/artifact/firmware/
